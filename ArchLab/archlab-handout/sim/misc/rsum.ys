# kai 19030500067-ZY2306441
# Execution begins at address 0
    .pos 0
# Your program should consist of some code that 
# sets up the stack structure, invokes a function, and then halts.
irmovq stack, %rsp
call main
halt
# Sample linked list
.align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0


main:
    irmovq ele1, %rdi
    call rsum_list
    ret


rsum_list:
	andq	%rdi, %rdi
	je	rtn
	pushq	%rbx
	mrmovq	(%rdi), %rbx
	mrmovq	8(%rdi), %rdi
	call	rsum_list
	addq	%rbx, %rax
	popq	%rbx
	ret
rtn:
	irmovq	$0, %rax
	ret

rsum_list2:
    andq    %rdi, %rdi
    je  rtn
    mrmovq	(%rdi), %r8
    mrmovq	8(%rdi), %rdi
	call	rsum_list
    addq    %r8, %rax
    ret
rtn:
    irmovq	$0, %rax
	ret

# Stack starts here and grows to lower add
    .pos 0x200
stack:
